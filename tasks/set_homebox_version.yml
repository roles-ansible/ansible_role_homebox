---
- name: "Check homebox installed version"
  ansible.builtin.shell: "set -eo pipefail; {{ homebox__executable_path }} -v  | cut -d',' -f1 | head -1 | cut -d' ' -f2"
  args:
    executable: /bin/bash
  register: homebox__active_version
  changed_when: false
  failed_when: false

- name: "Determine 'latest' version release"
  when: homebox__version == "latest"
  block:
    - name: "Get latest homebox release metadata"
      ansible.builtin.uri:
        url: https://api.github.com/repos/hay-kot/homebox/releases/latest
        return_content: true
      register: homebox__remote_metadata
      become: false
      when: not ansible_check_mode

    - name: "Fail if running in check mode without versions set."
      ansible.builtin.fail:
        msg: |
          "You are running this playbook in check mode:
          Please set the homebox version with the variable 'homebox__version', because the URI module cannot detect the latest version in this mode."
      when: ansible_check_mode and (homebox__version == 'latest' or homebox__version == 'present')

    - name: "Set fact latest homebox release"
      ansible.builtin.set_fact:
        homebox__remote_version: "{{ homebox__remote_metadata.json.tag_name[1:] }}"
      when: not ansible_check_mode

    - name: "Set homebox version target (latest)"
      ansible.builtin.set_fact:
        homebox__version_target: "{{ homebox__remote_version }}"
      when: not ansible_check_mode

- name: "Set homebox version target {{ homebox__version }}"
  ansible.builtin.set_fact:
    homebox__version_target: "{{ homebox__version }}"
  when: homebox__version != "latest"

- name: 'Assert that remote version is higher'
  ansible.builtin.assert:
    that:
      - homebox__active_version.stdout is version(homebox__remote_version, 'lt')
    fail_msg: ERROR - Remote version is lower then current version!
  when:
    - homebox__version == "latest" and homebox__active_version.stderr == "" | bool
